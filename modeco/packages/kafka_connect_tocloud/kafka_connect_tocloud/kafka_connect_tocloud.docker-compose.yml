---
version: '3'
services:

# START SERVICE kafka_connect.tocloud
  kafka_connect:
    image: ${CONTECO_REGISTRY}${CONTECO_REALM_RUNTIME}/conteco.kafka_connect.tocloud:5.4.0
    environment: ['CONNECT_REST_ADVERTISED_HOST_NAME=kafka_connect','CONNECT_REST_PORT=8083','CONNECT_GROUP_ID=kafka_connect','CONNECT_CONFIG_STORAGE_TOPIC=kafka_connect_configs','CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=3','CONNECT_OFFSET_FLUSH_INTERVAL_MS=10000','CONNECT_OFFSET_STORAGE_TOPIC=kafka_connect_offsets','CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=3','CONNECT_STATUS_STORAGE_TOPIC=kafka_connect_status','CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=3','CONNECT_KEY_CONVERTER=org.apache.kafka.connect.storage.StringConverter','CONNECT_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter','CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=${KAFKA_CONNECT_TOCLOUD_ENVIRONMENT_CONNECT_SCHEMA_REGISTRY_URL}','CONNECT_VALUE_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE=USER_INFO','CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO=${KAFKA_CONNECT_TOCLOUD_ENVIRONMENT_CONNECT_SCHEMA_REGISTRY_API_KEY}:${KAFKA_CONNECT_TOCLOUD_ENVIRONMENT_CONNECT_SCHEMA_REGISTRY_API_SECRET}','CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter','CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter','CONNECT_PRODUCER_CLASSPATH=/usr/share/java/monitoring-interceptors/monitoring-interceptors-5.4.0.jar','CONNECT_PRODUCER_INTERCEPTOR_CLASSES=io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor','CONNECT_CONSUMER_INTERCEPTOR_CLASSES=io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor','CONNECT_PLUGIN_PATH=/usr/share/java,/usr/share/confluent-hub-components','CONNECT_LOG4J_LOGGERS=org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR','CONNECT_BOOTSTRAP_SERVERS=${KAFKA_CONNECT_TOCLOUD_ENVIRONMENT_CONNECT_CLOUD_BOOTSTRAP_SERVERS}','CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=HTTPS','CONNECT_SECURITY_PROTOCOL=SASL_SSL','CONNECT_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_CONNECT_TOCLOUD_ENVIRONMENT_CONNECT_SASL_JAAS_CONFIG_CLUSTER_API_KEY}" password="${KAFKA_CONNECT_TOCLOUD_ENVIRONMENT_CONNECT_SASL_JAAS_CONFIG_CLUSTER_API_SECRET}";','CONNECT_SASL_MECHANISM=PLAIN','CONNECT_PRODUCER_SECURITY_PROTOCOL=SASL_SSL','CONNECT_PRODUCER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_CONNECT_TOCLOUD_ENVIRONMENT_CONNECT_PRODUCER_SASL_JAAS_CONFIG_CLUSTER_API_KEY}" password="${KAFKA_CONNECT_TOCLOUD_ENVIRONMENT_CONNECT_PRODUCER_SASL_JAAS_CONFIG_CLUSTER_API_SECRET}";','CONNECT_PRODUCER_SASL_MECHANISM=PLAIN','CONNECT_CONSUMER_SECURITY_PROTOCOL=SASL_SSL','CONNECT_CONSUMER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_CONNECT_TOCLOUD_ENVIRONMENT_CONNECT_CONSUMER_SASL_JAAS_CONFIG_CLUSTER_API_KEY}" password="${KAFKA_CONNECT_TOCLOUD_ENVIRONMENT_CONNECT_CONSUMER_SASL_JAAS_CONFIG_CLUSTER_API_SECRET}";','CONNECT_CONSUMER_SASL_MECHANISM=PLAIN']
    command: []
    volumes: ['package_kafka_connect_tocloud_kafka_connect_connect_secrets_volume:/etc/kafka-connect/secrets','package_kafka_connect_tocloud_kafka_connect_secrets_volume:/etc/kafka/secrets','package_kafka_connect_tocloud_kafka_connect_data_volume:/var/lib/kafka/data','package_kafka_connect_tocloud_kafka_connect_jars_volume:/etc/kafka-connect/jars']
    ports: [${KAFKA_CONNECT_TOCLOUD_PORTS}]
    networks: [package_overlay]
    deploy:
      mode: replicated
      replicas: ${KAFKA_CONNECT_TOCLOUD_DEPLOY_REPLICAS}
      resources:
        limits:
          cpus: '${KAFKA_CONNECT_TOCLOUD_DEPLOY_RESOURCES_LIMITS_CPUS}'
          memory: '${KAFKA_CONNECT_TOCLOUD_DEPLOY_RESOURCES_LIMITS_MEMORY}'
        reservations:
          cpus: '${KAFKA_CONNECT_TOCLOUD_DEPLOY_RESOURCES_RESERVATIONS_CPUS}'
          memory: '${KAFKA_CONNECT_TOCLOUD_DEPLOY_RESOURCES_RESERVATIONS_MEMORY}'
      placement:
        constraints: [${KAFKA_CONNECT_TOCLOUD_DEPLOY_PLACEMENT_CONSTRAINTS}]
      labels: [${KAFKA_CONNECT_TOCLOUD_DEPLOY_LABELS}]
    labels: [${KAFKA_CONNECT_TOCLOUD_LABELS}]
# END SERVICE kafka_connect.tocloud

volumes: {package_kafka_connect_tocloud_kafka_connect_connect_secrets_volume: { external: true },package_kafka_connect_tocloud_kafka_connect_secrets_volume: { external: true },package_kafka_connect_tocloud_kafka_connect_data_volume: { external: true },package_kafka_connect_tocloud_kafka_connect_jars_volume: { external: true }}
networks: {package_overlay: { external: true }}
